apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "area"

    productFlavors {
        overseainternal {
            dimension "area"
            buildConfigField "String", "SDK_OVERSEA_VERSION", "\"$ARTIFACT_VERSION\""
            buildConfigField "String", "SDK_OVERSEA_NAME", "\"$ARTIFACT_NAME\""
            buildConfigField "String", "DEFAULT_ENTRY_ACTIVITY", "\"$DEFAULT_ENTRY_ACTIVITY\""
            buildConfigField "String", "TIKTOK_SHARE_ACTIVITY", "\"$TIKTOK_SHARE_ACTIVITY\""
        }

        overseaexternal {
            dimension "area"
            buildConfigField "String", "SDK_OVERSEA_VERSION", "\"$ARTIFACT_VERSION_EXTERNAL\""
            buildConfigField "String", "SDK_OVERSEA_NAME", "\"$ARTIFACT_NAME_EXTERNAL\""
            buildConfigField "String", "DEFAULT_ENTRY_ACTIVITY", "\"$DEFAULT_ENTRY_ACTIVITY\""
            buildConfigField "String", "TIKTOK_SHARE_ACTIVITY", "\"$TIKTOK_SHARE_ACTIVITY\""
        }
    }

    sourceSets {
        overseainternal { java.srcDirs = ['src/overseainternal/java', 'src/overseainternal/java/'] }
        overseaexternal { java.srcDirs = ['src/overseaexternal/java', 'src/overseaexternal/java/'] }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // [optional] use AndroidJUnitRunner as the default test instrumentation runner
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.annotation:annotation:1.2.0'
    implementation 'androidx.test:monitor:1.4.0'
    implementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:rules:1.4.0"
    // Optional -- UI testing with Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    // Optional -- UI testing with UI Automator
//    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion"
    // Optional -- UI testing with Compose
//    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    compileOnly 'com.google.code.gson:gson:2.2.4'

    api "com.google.auto.value:auto-value-annotations:1.7.4"
    annotationProcessor "com.google.auto.value:auto-value:1.7.4"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

apply from: '../upload_all.gradle'
apply from: '../mvn_publish.gradle'
repositories {
    mavenCentral()
}
